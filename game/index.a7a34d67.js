const t={USER:"user",MACHINE:"machine"};class e{spots=[];addSpots(t){if(6===t.length){this.spots=t;return}throw Error(`Spots should be equal to 6. It was given ${t.length}`)}getSpots(){return this.spots}hasAvailableSpot(){return this.spots.some(t=>!t.hasOwner())}}class s{getColumnIndexToPlayIn(t){return this._processBestDefensiveMoves(t),this._calculateColumnIndextoPlayIn(t)}_getColumnIndexesPossibleToPlay(t){return t.reduce((t,e,s)=>[...t,...e.hasAvailableSpot()?[s]:[]],[])}_calculateColumnIndextoPlayIn(t){let e=this._getColumnIndexesPossibleToPlay(t);return e[Math.round(Math.random()*(e.length-1))]}_processBestDefensiveMoves(t){let e=[];return t.forEach((t,s)=>{if(t.hasAvailableSpot()){let n=[...t.getSpots()].reverse(),a=0;n.forEach(t=>{let n=t.isPlayerOwner(),o=t.hasOwner();n?a++:(!o&&a>1&&e.push({sequence:a,chosenMoveToColumnIndex:s}),a=0)})}}),console.log({opponentColumnSequences:e}),e}}class n{state=a.EMPTY;isMatched=!1;getState(){return this.state}getIsMatched(){return this.isMatched}getColor(){return o[this.state]}preActivate(){this.state=a.PLAYER_PREACTIVE}inactivate(){this.state=a.EMPTY,this.isMatched=!1}setAsMatched(){this.isMatched=!0}setOwnedBy(t){this.state=t}hasOwner(){return this.state===a.PLAYER||this.state===a.MACHINE}isPlayerOwner(){return this.getState()===a.PLAYER}}const a={EMPTY:"empty",PLAYER:t.USER,MACHINE:t.MACHINE,PLAYER_PREACTIVE:"player_preactive",MACHINE_PREACTIVE:"machine_preactive"},o={[a.EMPTY]:"#c3c3c3",[a.PLAYER]:"#FF9F1C",[a.MACHINE]:"#E71D36",[a.PLAYER_PREACTIVE]:"#FFD192",[a.MACHINE_PREACTIVE]:"#FF94A1"};class i{width=null;height=null;columns=[];playTurn=t.USER;matchResult=null;constructor({ctx:t,width:n,height:a}){this.ctx=t,this.width=n,this.height=a,this.onMatchEndCallbacks=[],this.onPlayTurnChangeCallbacks=[],this.machinePlayer=new s,this.columns=Array(7).fill(null).map(()=>new e),this.fillColumnsWithSpots()}getPlayTurn(){return this.playTurn}onPlayTurnChange(t){this.onPlayTurnChangeCallbacks.push(t)}fillColumnsWithSpots(){this.columns.forEach(t=>{t.addSpots(Array(6).fill(null).map(()=>new n))})}getSpotPosition(t){return 87*t+43.5+(0===t?0:8*t)}getColumnIndexByPositionX(t){return Math.floor(t/(this.width/7))}renderBoard(){this.ctx.clearRect(0,0,this.width,this.height),this.columns.forEach((t,e)=>{t.getSpots().forEach((t,s)=>{this.ctx.save(),this.ctx.beginPath(),this.ctx.arc(this.getSpotPosition(e),this.getSpotPosition(s),43.5,0,2*Math.PI),this.ctx.fillStyle=t.getColor(),t.getIsMatched()&&(this.ctx.strokeStyle="#000000",this.ctx.lineWidth=4,this.ctx.stroke()),this.ctx.fill(),this.ctx.closePath(),this.ctx.restore()})}),window.requestAnimationFrame(()=>this.renderBoard())}setColumnActive({positionX:e}){let s=this.getColumnIndexByPositionX(e);this.columns.forEach((e,n)=>e.getSpots().forEach(e=>{if(n===s&&!e.hasOwner()&&this.getPlayTurn()===t.USER&&!this.matchResult)return e.preActivate();e.hasOwner()||e.inactivate()}))}setAllColumnsInactive(){this.columns.forEach(t=>{t.getSpots().forEach(t=>{t.hasOwner()||t.inactivate()})})}resetAllColumnsSpots(){this.columns.forEach(t=>{t.getSpots().forEach(t=>{t.inactivate()})})}setNextPlayerTurn({currentPlayer:e}){this.playTurn=e===t.USER?t.MACHINE:t.USER,this.onPlayTurnChangeCallbacks.forEach(t=>t({currentTurn:this.playTurn}))}play({whichPlayer:t,columnIndex:e}){if(this.matchResult)return;let s=this.columns[e].getSpots().findLast(t=>!t.hasOwner());if(!s)throw Error("Cannot play in this column.");s.setOwnedBy(t),this.findWinnerMatch(),this.setNextPlayerTurn({currentPlayer:t}),window.setTimeout(()=>this.maybeMachinePlay(),1500)}maybeMachinePlay(){this.getPlayTurn()!==t.MACHINE||this.matchResult||this.play({whichPlayer:t.MACHINE,columnIndex:this.machinePlayer.getColumnIndexToPlayIn(this.columns)})}findWinnerMatch(){let t=[],e=[],s=[],n=[];this.columns.forEach(s=>{let n=s.getSpots();t.push(n),n.forEach((t,s)=>{if(Array.isArray(e[s]))return e[s].push(t);e[s]=[t]})}),t.forEach((t,e)=>{t.forEach((t,n)=>{if(Array.isArray(s[n+e]))return s[n+e].push(t);void 0==s[n+e]&&(s[n+e]=[t])})}),t.reverse().forEach((t,e)=>{t.forEach((t,s)=>{if(Array.isArray(n[s+e]))return n[s+e].push(t);void 0==n[s+e]&&(n[s+e]=[t])})}),this.alertWinner(t),this.alertWinner(e),this.alertWinner(s),this.alertWinner(n)}alertWinner(e){if(this.matchResult)return;let s={[t.USER]:[],[t.MACHINE]:[]};e.forEach(e=>{e.forEach(e=>{this.matchResult||(e.getState()===t.USER?(s[t.USER].push(e),s[t.MACHINE]=[]):(e.getState()===t.MACHINE?s[t.MACHINE].push(e):s[t.MACHINE]=[],s[t.USER]=[]),Object.entries(s).forEach(([t,e])=>{!this.matchResult&&e.length>=4&&(e.forEach(t=>t.setAsMatched()),this.setMatchEnd({result:t}))}))}),s[t.USER]=[],s[t.MACHINE]=[]})}onMatchEnd(t){this.onMatchEndCallbacks.push(t)}setMatchEnd({result:t}){this.matchResult=t,this.onMatchEndCallbacks.forEach(e=>e({result:t}))}newGameMatch(){this.resetAllColumnsSpots(),this.matchResult=null,this.playTurn=t.USER}}class r{constructor({mouseAction:t,board:e}){this.mouseAction=t,this.board=e,this.UI={userScoreElement:document.querySelector("#user-score-points"),machineScoreElement:document.querySelector("#machine-score-points"),userScoreWrapper:document.querySelector("#user-score-wrapper"),machineScoreWrapper:document.querySelector("#machine-score-wrapper"),resultModal:document.querySelector("#match-end-modal"),playAgainBtn:document.querySelector("#match-end-play-again-btn"),matchEndResult:document.querySelector("#match-end-result")}}watchPlayAgain(){this.UI.playAgainBtn.addEventListener("click",()=>{this.board.newGameMatch(),this.UI.resultModal.classList.remove("is-match-ended")})}watchMouseEvents(){this.mouseAction.watch(),this.mouseAction.onMouseMove((...t)=>this.onMouseMove(...t)),this.mouseAction.onMouseOut((...t)=>this.onMouseOut(...t)),this.mouseAction.onMouseClick((...t)=>this.onMousClick(...t))}onMouseMove({positionX:t,positionY:e}){this.board.setColumnActive({positionX:t})}onMouseOut(){this.board.setAllColumnsInactive()}onMousClick({positionX:e,positionY:s}){this.board.getPlayTurn()===t.USER&&this.board.play({whichPlayer:t.USER,columnIndex:this.board.getColumnIndexByPositionX(e)})}watchMatchEnd(){this.board.onMatchEnd(({result:e})=>{console.log({result:e});let s=+this.UI.userScoreElement.textContent,n=+this.UI.machineScoreElement.textContent;e===t.USER&&(s++,this.UI.matchEndResult.textContent="You won!"),e===t.MACHINE&&(n++,this.UI.matchEndResult.textContent="Machine won!"),e!==t.USER&&e!==t.MACHINE&&(this.UI.matchEndResult.textContent="Draw"),this.UI.userScoreElement.textContent=s,this.UI.machineScoreElement.textContent=n,this.UI.resultModal.classList.add("is-match-ended")})}watchPlayTurn(){this.board.onPlayTurnChange(({currentTurn:e})=>{if(e===t.USER){this.UI.userScoreWrapper.classList.add("is-playing"),this.UI.machineScoreWrapper.classList.remove("is-playing");return}if(e===t.MACHINE){this.UI.machineScoreWrapper.classList.add("is-playing"),this.UI.userScoreWrapper.classList.remove("is-playing");return}this.UI.machineScoreWrapper.classList.remove("is-playing"),this.UI.userScoreWrapper.classList.remove("is-playing")})}}class h{mouseMoveCallbacks=[];mouseOutCallbacks=[];mouseClickCallbacks=[];constructor({ctx:t,canvas:e}){this.ctx=t,this.canvas=e}watch(){this.watchMouseMove(),this.watchMouseOut(),this.watchMouseClick()}onMouseMove(t){this.mouseMoveCallbacks.push(t)}onMouseOut(t){this.mouseOutCallbacks.push(t)}onMouseClick(t){this.mouseClickCallbacks.push(t)}watchMouseMove(){this.canvas.addEventListener("mousemove",t=>{let e=t.offsetX,s=t.offsetY;this.mouseMoveCallbacks.forEach(t=>t({positionX:e,positionY:s}))})}watchMouseOut(){this.canvas.addEventListener("mouseout",t=>{this.mouseOutCallbacks.forEach(t=>t())})}watchMouseClick(){this.canvas.addEventListener("click",t=>{let e=t.offsetX,s=t.offsetY;this.mouseClickCallbacks.forEach(t=>t({positionX:e,positionY:s}))})}}class c{player=null;machine=null;board=null;controller=null;constructor(t){this.canvas=t,this.ctx=t.getContext("2d"),this.board=new i({ctx:this.ctx,width:t.width,height:t.height}),this.mouseAction=new h({ctx:this.ctx,canvas:this.canvas}),this.controller=new r({mouseAction:this.mouseAction,board:this.board})}init(){window.requestAnimationFrame(()=>{this.board.renderBoard()}),this.controller.watchMouseEvents(),this.controller.watchMatchEnd(),this.controller.watchPlayTurn(),this.controller.watchPlayAgain()}}document.addEventListener("DOMContentLoaded",()=>{new c(document.querySelector("#game-canvas")).init()});
//# sourceMappingURL=index.a7a34d67.js.map
